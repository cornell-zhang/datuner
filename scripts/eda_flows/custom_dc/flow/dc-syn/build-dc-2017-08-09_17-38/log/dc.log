
                           Design Compiler Graphical 
                                 DC Ultra (TM)
                                  DFTMAX (TM)
                              Power Compiler (TM)
                                 DesignWare (R)
                                 DC Expert (TM)
                               Design Vision (TM)
                               HDL Compiler (TM)
                               VHDL Compiler (TM)
                                  DFT Compiler
                               Design Compiler(R)

                 Version M-2016.12 for linux64 - Nov 21, 2016 

                    Copyright (c) 1988 - 2016 Synopsys, Inc.
   This software and the associated documentation are proprietary to Synopsys,
 Inc. This software may only be used in accordance with the terms and conditions
 of a written license agreement with Synopsys, Inc. All other use, reproduction,
            or distribution of this software is strictly prohibited.
Initializing...
Starting shell in Topographical mode...
source -echo -verbose dc_setup.tcl
source -echo -verbose make_generated_vars.tcl
set DESIGN_NAME                 "diffeq1";
diffeq1
set TARGET_LIBRARY_FILES        "/work/zhang/users/liu//saed-90nm/cells.db";
/work/zhang/users/liu//saed-90nm/cells.db
set MW_REFERENCE_LIB_DIRS       "/work/zhang/users/liu//saed-90nm/cells.fr";
/work/zhang/users/liu//saed-90nm/cells.fr
set TECH_FILE                   "/work/zhang/users/liu//saed-90nm/cells.tf";
/work/zhang/users/liu//saed-90nm/cells.tf
set MAP_FILE                    "/work/zhang/users/liu//saed-90nm/tech2itf.map";
/work/zhang/users/liu//saed-90nm/tech2itf.map
set TLUPLUS_MAX_FILE            "/work/zhang/users/liu//saed-90nm/cells-max.tluplus";
/work/zhang/users/liu//saed-90nm/cells-max.tluplus
set TLUPLUS_MIN_FILE            "/work/zhang/users/liu//saed-90nm/cells-min.tluplus";
/work/zhang/users/liu//saed-90nm/cells-min.tluplus
set ALIB_DIR                    "/work/zhang/users/liu//saed-90nm/alib";
/work/zhang/users/liu//saed-90nm/alib
set RTL_SOURCE_FILES            "diffeq1.v";
diffeq1.v
set DCRM_CONSTRAINTS_INPUT_FILE "constraints.tcl";
constraints.tcl
set REPORTS_DIR                 "reports";
reports
set RESULTS_DIR                 "results";
results
set CLOCK_PERIOD                "1";
1
set ADDITIONAL_SEARCH_PATH      "/work/zhang/users/liu//saed-90nm ../../../designs/";
/work/zhang/users/liu//saed-90nm ../../../designs/
/work/zhang/users/liu//saed-90nm ../../../designs/
source -echo -verbose common_setup.tcl
##########################################################################################
# Variables common to all RM scripts
# Script: common_setup.tcl
# Version: D-2010.03-SP1 (May 24, 2010)
# Copyright (C) 2007-2010 Synopsys, Inc. All rights reserved.
##########################################################################################
#YUNSUP: this is set by make_generated_vars.tcl
#set DESIGN_NAME                   ""  ;#  The name of the top-level design
set DESIGN_REF_DATA_PATH          ""  ;#  Absolute path prefix variable for library/design data.
#  Use this variable to prefix the common absolute path to
#  the common variables defined below.
#  Absolute paths are mandatory for hierarchical RM flow.
##########################################################################################
# Hierarchical Flow Design Variables
##########################################################################################
set HIERARCHICAL_DESIGNS           "" ;# List of hierarchical block design names "DesignA DesignB" ...
set HIERARCHICAL_CELLS             "" ;# List of hierarchical block cell instance names "u_DesignA u_DesignB" ...
##########################################################################################
# Library Setup Variables
##########################################################################################
# For the following variables, use a blank space to separate multiple entries
# Example: set TARGET_LIBRARY_FILES "lib1.db lib2.db lib3.db"
#YUNSUP: this is set by make_generated_vars.tcl
#set ADDITIONAL_SEARCH_PATH        ""  ;#  Additional search path to be added to the default search path
#YUNSUP: this is set by make_generated_vars.tcl
#set TARGET_LIBRARY_FILES          ""  ;#  Target technology logical libraries
set ADDITIONAL_LINK_LIB_FILES     ""  ;#  Extra link logical libraries not included in TARGET_LIBRARY_FILES
set MIN_LIBRARY_FILES             ""  ;#  List of max min library pairs "max1 min1 max2 min2 max3 min3"...
#YUNSUP: this is set by make_generated_vars.tcl
#set MW_REFERENCE_LIB_DIRS         ""  ;#  Milkyway reference libraries (include IC Compiler ILMs here)
set MW_REFERENCE_CONTROL_FILE     ""  ;#  Reference Control file to define the MW ref libs
#YUNSUP: this is set by make_generated_vars.tcl
#set TECH_FILE                     ""  ;#  Milkyway technology file
#set MAP_FILE                      ""  ;#  Mapping file for TLUplus
#set TLUPLUS_MAX_FILE              ""  ;#  Max TLUplus file
#set TLUPLUS_MIN_FILE              ""  ;#  Min TLUplus file
set MW_POWER_NET                "VDD" ;#
VDD
set MW_POWER_PORT               "VDD" ;#
VDD
set MW_GROUND_NET               "VSS" ;#
VSS
set MW_GROUND_PORT              "VSS" ;#
VSS
set MIN_ROUTING_LAYER            ""   ;# Min routing layer
set MAX_ROUTING_LAYER            ""   ;# Max routing layer
set LIBRARY_DONT_USE_FILE        ""   ;# Tcl file with library modifications for dont_use
##########################################################################################
# Multi-Voltage Common Variables
#
# Define the following MV common variables for the RM scripts for multi-voltage flows.
# Use as few or as many of the following definitions as needed by your design.
##########################################################################################
set PD1                          ""           ;# Name of power domain/voltage area  1
set PD1_CELLS                    ""           ;# Instances to include in power domain/voltage area 1
set VA1_COORDINATES              {}           ;# Coordinates for voltage area 1
set MW_POWER_NET1                "VDD1"       ;# Power net for voltage area 1
VDD1
set MW_POWER_PORT1               "VDD"        ;# Power port for voltage area 1
VDD
set PD2                          ""           ;# Name of power domain/voltage area  2
set PD2_CELLS                    ""           ;# Instances to include in power domain/voltage area 2
set VA2_COORDINATES              {}           ;# Coordinates for voltage area 2
set MW_POWER_NET2                "VDD2"       ;# Power net for voltage area 2
VDD2
set MW_POWER_PORT2               "VDD"        ;# Power port for voltage area 2
VDD
set PD3                          ""           ;# Name of power domain/voltage area  3
set PD3_CELLS                    ""           ;# Instances to include in power domain/voltage area 3
set VA3_COORDINATES              {}           ;# Coordinates for voltage area 3
set MW_POWER_NET3                "VDD3"       ;# Power net for voltage area 3
VDD3
set MW_POWER_PORT3               "VDD"        ;# Power port for voltage area 3
VDD
set PD4                          ""           ;# Name of power domain/voltage area  4
set PD4_CELLS                    ""           ;# Instances to include in power domain/voltage area 4
set VA4_COORDINATES              {}           ;# Coordinates for voltage area 4
set MW_POWER_NET4                "VDD4"       ;# Power net for voltage area 4
VDD4
set MW_POWER_PORT4               "VDD"        ;# Power port for voltage area 4
VDD
VDD
source -echo -verbose dc_setup_filenames.tcl
#################################################################################
# Design Compiler Reference Methodology Filenames Setup
# Script: dc_setup_filenames.tcl
# Version: D-2010.03-SP1 (May 24, 2010)
# Copyright (C) 2007-2010 Synopsys, Inc. All rights reserved.
#################################################################################
#################################################################################
# Use this file to customize the filenames used in the Design Compiler
# Reference Methodology scripts.  This file is designed to be sourced at the
# beginning of the dc_setup.tcl file after sourcing the common_setup.tcl file.
#
# Note that the variables presented in this file depend on the type of flow
# selected when generating the reference methodology files.
#
# Example.
#    If you set DFT flow as FALSE, you will not see DFT related filename
#    variables in this file.
#
# When reusing this file for different flows or newer release, ensure that
# all the required filename variables are defined.  One way to do this is
# to source the default dc_setup_filenames.tcl file and then override the
# default settings as needed for your design.
#
# The default values are backwards compatible with older
# Design Compiler Reference Methodology releases.
#
# Note: Care should be taken when modifying the names of output files
#       that are used in other scripts or tools.
#################################################################################
#################################################################################
# General Flow Files
#################################################################################
##########################
# Milkyway Library Names #
##########################
set DCRM_MW_LIBRARY_NAME				${DESIGN_NAME}_LIB
diffeq1_LIB
set DCRM_FINAL_MW_CEL_NAME				${DESIGN_NAME}_DCT
diffeq1_DCT
###############
# Input Files #
###############
set DCRM_SDC_INPUT_FILE					${DESIGN_NAME}.sdc
diffeq1.sdc
#YUNSUP: this is set by make_generated_vars.tcl
#set DCRM_CONSTRAINTS_INPUT_FILE				${DESIGN_NAME}.constraints.tcl
###########
# Reports #
###########
set DCRM_CONSISTENCY_CHECK_ENV_FILE			${DESIGN_NAME}.compile_ultra.env
diffeq1.compile_ultra.env
set DCRM_FINAL_QOR_REPORT				${DESIGN_NAME}.mapped.qor.rpt
diffeq1.mapped.qor.rpt
set DCRM_FINAL_TIMING_REPORT				${DESIGN_NAME}.mapped.timing.rpt
diffeq1.mapped.timing.rpt
set DCRM_FINAL_AREA_REPORT				${DESIGN_NAME}.mapped.area.rpt
diffeq1.mapped.area.rpt
set DCRM_FINAL_POWER_REPORT				${DESIGN_NAME}.mapped.power.rpt
diffeq1.mapped.power.rpt
set DCRM_FINAL_CLOCK_GATING_REPORT			${DESIGN_NAME}.mapped.clock_gating.rpt
diffeq1.mapped.clock_gating.rpt
################
# Output Files #
################
set DCRM_ELABORATED_DESIGN_DDC_OUTPUT_FILE 		${DESIGN_NAME}.elab.ddc
diffeq1.elab.ddc
set DCRM_COMPILE_ULTRA_DDC_OUTPUT_FILE			${DESIGN_NAME}.compile_ultra.ddc
diffeq1.compile_ultra.ddc
set DCRM_FINAL_DDC_OUTPUT_FILE				${DESIGN_NAME}.mapped.ddc
diffeq1.mapped.ddc
set DCRM_FINAL_VERILOG_OUTPUT_FILE			${DESIGN_NAME}.mapped.v
diffeq1.mapped.v
set DCRM_FINAL_SDC_OUTPUT_FILE				${DESIGN_NAME}.mapped.sdc
diffeq1.mapped.sdc
#################################################################################
# DCT Flow Files
#################################################################################
###################
# DCT Input Files #
###################
set DCRM_DCT_DEF_INPUT_FILE				${DESIGN_NAME}.def
diffeq1.def
set DCRM_DCT_FLOORPLAN_INPUT_FILE			${DESIGN_NAME}.fp
diffeq1.fp
set DCRM_DCT_PHYSICAL_CONSTRAINTS_INPUT_FILE		${DESIGN_NAME}.physical_constraints.tcl
diffeq1.physical_constraints.tcl
###############
# DCT Reports #
###############
set DCRM_DCT_PHYSICAL_CONSTRAINTS_REPORT		${DESIGN_NAME}.physical_constraints.rpt
diffeq1.physical_constraints.rpt
set DCRM_DCT_FINAL_CONGESTION_REPORT			${DESIGN_NAME}.mapped.congestion.rpt
diffeq1.mapped.congestion.rpt
set DCRM_DCT_FINAL_CONGESTION_MAP_OUTPUT_FILE		${DESIGN_NAME}.mapped.congestion_map.png
diffeq1.mapped.congestion_map.png
set DCRM_DCT_FINAL_CONGESTION_MAP_WINDOW_OUTPUT_FILE	${DESIGN_NAME}.mapped.congestion_map_window.png
diffeq1.mapped.congestion_map_window.png
####################
# DCT Output Files #
####################
set DCRM_DCT_FLOORPLAN_OUTPUT_FILE			${DESIGN_NAME}.fp
diffeq1.fp
set DCRM_DCT_FINAL_FLOORPLAN_OUTPUT_FILE		${DESIGN_NAME}.mapped.fp
diffeq1.mapped.fp
set DCRM_DCT_FINAL_SPEF_OUTPUT_FILE			${DESIGN_NAME}.mapped.spef
diffeq1.mapped.spef
set DCRM_DCT_FINAL_SDF_OUTPUT_FILE			${DESIGN_NAME}.mapped.sdf
diffeq1.mapped.sdf
#################################################################################
# Formality Flow Files
#################################################################################
set DCRM_SVF_OUTPUT_FILE 				${DESIGN_NAME}.mapped.svf
diffeq1.mapped.svf
set FMRM_UNMATCHED_POINTS_REPORT			${DESIGN_NAME}.fmv_unmatched_points.rpt
diffeq1.fmv_unmatched_points.rpt
set FMRM_FAILING_SESSION_NAME				${DESIGN_NAME}
diffeq1
set FMRM_FAILING_POINTS_REPORT				${DESIGN_NAME}.fmv_failing_points.rpt
diffeq1.fmv_failing_points.rpt
set FMRM_ABORTED_POINTS_REPORT				${DESIGN_NAME}.fmv_aborted_points.rpt
diffeq1.fmv_aborted_points.rpt
set FMRM_ANALYZE_POINTS_REPORT				${DESIGN_NAME}.fmv_analyze_points.rpt
diffeq1.fmv_analyze_points.rpt
diffeq1.fmv_analyze_points.rpt
#################################################################################
# Design Compiler Top-Down Reference Methodology Setup
# Script: dc_setup.tcl
# Version: D-2010.03-SP1 (May 24, 2010)
# Copyright (C) 2007-2010 Synopsys, Inc. All rights reserved.
#################################################################################
#################################################################################
# Setup Variables
#
# Modify settings in this section to customize your DC-RM run.
#################################################################################
# Portions of dc_setup.tcl may be used by other tools so do check for DC only commands
if {$synopsys_program_name == "dc_shell"}  {

  # Use the set_host_options command to enable multicore optimization to improve runtime.
  # Note that this feature has special usage and license requirements.  Please refer
  # to the "Support for Multicore Technology" section in the Design Compiler User Guide
  # for multicore usage guidelines.
  # Note: This is a DC Ultra feature and is not supported in DC Expert.

  # set_host_options -max_cores 4

  # Change alib_library_analysis_path to point to a central cache of analyzed libraries
  # to save some runtime and disk space.  The following setting only reflects the
  # the default value and should be changed to a central location for best results.

  set_app_var alib_library_analysis_path ${ALIB_DIR}

  # Add any additional DC variables needed here
}
/work/zhang/users/liu//saed-90nm/alib
#YUNSUP: this is set by make_generated_vars.tcl
#set RTL_SOURCE_FILES  ""      ;# Enter the list of source RTL files if reading from RTL
# The following variables are used by scripts in dc_scripts to direct the location
# of the output files
#YUNSUP: this is set by make_generated_vars.tcl
#set REPORTS_DIR "reports"
#set RESULTS_DIR "results"
file mkdir ${REPORTS_DIR}
file mkdir ${RESULTS_DIR}
#################################################################################
# Library Setup
#
# This section is designed to work with the settings from common_setup.tcl
# without any additional modification.
#################################################################################
# Define all the library variables shared by all the front-end tools
set_app_var search_path ". ${ADDITIONAL_SEARCH_PATH} $search_path"
. /work/zhang/users/liu//saed-90nm ../../../designs/ . /opt/synopsys/M-2016.12/synopsys-dc-M-2016.12/libraries/syn /opt/synopsys/M-2016.12/synopsys-dc-M-2016.12/minpower/syn /opt/synopsys/M-2016.12/synopsys-dc-M-2016.12/dw/syn_ver /opt/synopsys/M-2016.12/synopsys-dc-M-2016.12/dw/sim_ver
# Milkyway variable settings
# Make sure to define the following Milkyway library variables
# mw_logic1_net, mw_logic0_net and mw_design_library are needed by write_milkyway
set_app_var mw_logic1_net ${MW_POWER_NET}
VDD
set_app_var mw_logic0_net ${MW_GROUND_NET}
VSS
set mw_reference_library ${MW_REFERENCE_LIB_DIRS}
/work/zhang/users/liu//saed-90nm/cells.fr
set mw_design_library ${DCRM_MW_LIBRARY_NAME}
diffeq1_LIB
set mw_site_name_mapping [list CORE unit Core unit core unit]
CORE unit Core unit core unit
# The remainder of the setup below should only be performed in Design Compiler
if {$synopsys_program_name == "dc_shell"}  {

  # Include all libraries for multi-Vth leakage power optimization

  set_app_var target_library ${TARGET_LIBRARY_FILES}
  set_app_var synthetic_library dw_foundation.sldb
  set_app_var link_library "* $target_library $ADDITIONAL_LINK_LIB_FILES $synthetic_library"

  # Set min libraries if they exist
  foreach {max_library min_library} $MIN_LIBRARY_FILES {
    set_min_library $max_library -min_version $min_library
  }

  if {[shell_is_in_topographical_mode]} {

    # Only create new Milkyway design library if it doesn't already exist
    if {![file isdirectory $mw_design_library ]} {
      create_mw_lib   -technology $TECH_FILE                       -mw_reference_library $mw_reference_library                       $mw_design_library
    } else {
      # If Milkyway design library already exists, ensure that it is consistent with specified Milkyway reference libraries
      set_mw_lib_reference $mw_design_library -mw_reference_library $mw_reference_library
    }

    open_mw_lib     $mw_design_library

    check_library

    set_tlu_plus_files -max_tluplus $TLUPLUS_MAX_FILE                        -min_tluplus $TLUPLUS_MIN_FILE                        -tech2itf_map $MAP_FILE

    check_tlu_plus_files

  }

  #################################################################################
  # Library Modifications
  #
  # Apply library modifications here after the libraries are loaded.
  #################################################################################

  if {[file exists [which ${LIBRARY_DONT_USE_FILE}]]} {
    source -echo -verbose ${LIBRARY_DONT_USE_FILE}
  }
}
Start to load technology file /work/zhang/users/liu//saed-90nm/cells.tf.
Information: Non-metal layer 'DIFF_33' has the metal layer attribute 'endOfLineCornerKeepoutWidth'. (line 1574) (TFCHK-046)
Warning: DesignRule is defined with invalid metal-to-via enclosure layers 'NWELL' and 'DIFF'. (line 1937). (TFCHK-082)
Warning: DesignRule attribute 'layer2' is assigned a non-physical layer 'DNW'. (line 1947) (TFCHK-079)
Warning: DesignRule is defined with invalid metal-to-via enclosure layers 'NWELL' and 'DNW'. (line 1950). (TFCHK-082)
Warning: DesignRule is defined with invalid metal-to-via enclosure layers 'PO' and 'DIFF'. (line 1957). (TFCHK-082)
Warning: DesignRule is defined with invalid metal-to-via enclosure layers 'DIFF' and 'CO'. (line 1965). (TFCHK-082)
Warning: DesignRule attribute 'layer2' is assigned a non-physical layer 'RPOLY'. (line 2151) (TFCHK-079)
Warning: DesignRule is defined with invalid metal-to-via enclosure layers 'PIMP' and 'DIFF'. (line 2159). (TFCHK-082)
Warning: DesignRule is defined with invalid metal-to-via enclosure layers 'NIMP' and 'DIFF'. (line 2165). (TFCHK-082)
Warning: DesignRule is defined with invalid metal-to-via enclosure layers 'DIFF_25' and 'DIFF'. (line 2171). (TFCHK-082)
Warning: DesignRule attribute 'layer1' is assigned a non-physical layer 'HVTIMP'. (line 2174) (TFCHK-079)
Warning: DesignRule is defined with invalid metal-to-via enclosure layers 'HVTIMP' and 'DIFF'. (line 2177). (TFCHK-082)
Warning: DesignRule attribute 'layer1' is assigned a non-physical layer 'LVTIMP'. (line 2180) (TFCHK-079)
Warning: DesignRule is defined with invalid metal-to-via enclosure layers 'LVTIMP' and 'DIFF'. (line 2183). (TFCHK-082)
Warning: DesignRule is defined with invalid metal-to-via enclosure layers 'SBLK' and 'DIFF'. (line 2190). (TFCHK-082)
Warning: DesignRule is defined with invalid metal-to-via enclosure layers 'SBLK' and 'PO'. (line 2197). (TFCHK-082)
Warning: DesignRule is defined with invalid metal-to-via enclosure layers 'PIMP' and 'PO'. (line 2209). (TFCHK-082)
Warning: DesignRule is defined with invalid metal-to-via enclosure layers 'NIMP' and 'PO'. (line 2215). (TFCHK-082)
Warning: Layer 'M1' has a pitch 0.32 that does not match the recommended wire-to-via pitch 0.33. (TFCHK-049)
Warning: Layer 'M2' has a pitch 0.32 that does not match the recommended wire-to-via pitch 0.36. (TFCHK-049)
Warning: Layer 'M3' has a pitch 0.64 that does not match the recommended wire-to-via pitch 0.36. (TFCHK-049)
Warning: Layer 'M4' has a pitch 0.64 that does not match the recommended wire-to-via pitch 0.36. (TFCHK-049)
Warning: Layer 'M5' has a pitch 1.28 that does not match the recommended wire-to-via pitch 0.36. (TFCHK-049)
Warning: Layer 'M6' has a pitch 1.28 that does not match the recommended wire-to-via pitch 0.36. (TFCHK-049)
Warning: Layer 'M7' has a pitch 2.56 that does not match the recommended wire-to-via pitch 0.36. (TFCHK-049)
Warning: Layer 'M8' has a pitch 3.84 that does not match the recommended wire-to-via pitch 0.465 or 0.5. (TFCHK-049)
Warning: Layer 'M9' has a pitch 5.12 that does not match the recommended wire-to-via pitch 0.935 or 0.9. (TFCHK-049)
Technology file /work/zhang/users/liu//saed-90nm/cells.tf has been loaded successfully.
Error: The check_library command failed to run. Check the installation of Library Compiler. (LCSH-3)

Sanity check for TLU+ vs MW-Tech files:
 max_tlu+: /work/zhang/users/liu//saed-90nm/cells-max.tluplus
 min_tlu+: /work/zhang/users/liu//saed-90nm/cells-min.tluplus
 mapping_file: /work/zhang/users/liu//saed-90nm/tech2itf.map
 max_emul_tlu+: **NONE**
 min_emul_tlu+: **NONE**
 MW design lib: diffeq1_LIB

--------- Sanity Check on TLUPlus Files -------------
1. Checking the conducting layer names in ITF and mapping file ... 
[ Passed! ]
2. Checking the via layer names in ITF and mapping file ... 
[ Passed! ]
3. Checking the consistency of Min Width and Min Spacing between MW-tech and ITF ... 
[ Passed! ]
----------------- Check Ends ------------------
#################################################################################
# Design Compiler Reference Methodology Script for Top-Down Flow
# Script: dc.tcl
# Version: D-2010.03-SP1 (May 24, 2010)
# Copyright (C) 2007-2010 Synopsys, Inc. All rights reserved.
#################################################################################
#################################################################################
# Additional Variables
#
# Add any additional variables needed for your flow here.
#################################################################################
# No additional flow variables are being recommended
#################################################################################
# Setup for Formality verification
#
# SVF should always be written to allow Formality verification
# for advanced optimizations.
#################################################################################
set_svf ${RESULTS_DIR}/${DCRM_SVF_OUTPUT_FILE}
1
#################################################################################
# Setup SAIF Name Mapping Database
#
# Include an RTL SAIF for better power optimization and analysis.
#
# saif_map should be issued prior to RTL elaboration to create a name mapping
# database for better annotation.
################################################################################
saif_map -start
Information: The SAIF name mapping information database is now active. (PWR-602)
1
#################################################################################
# Read in the RTL Design
#
# Read in the RTL source files or read in the elaborated design (.ddc).
# Use the -format option to specify: verilog, sverilog, or vhdl as needed.
#################################################################################
define_design_lib WORK -path ./WORK
1
analyze -format verilog ${RTL_SOURCE_FILES}
Running PRESTO HDLC
Compiling source file ../../../designs/diffeq1.v
Presto compilation completed successfully.
Loading db file '/work/zhang/users/liu/saed-90nm/cells.db'
Loading db file '/opt/synopsys/M-2016.12/synopsys-dc-M-2016.12/libraries/syn/dw_foundation.sldb'
1
elaborate ${DESIGN_NAME}
Loading db file '/opt/synopsys/M-2016.12/synopsys-dc-M-2016.12/libraries/syn/gtech.db'
Loading db file '/opt/synopsys/M-2016.12/synopsys-dc-M-2016.12/libraries/syn/standard.sldb'
  Loading link library 'saed90nm_typ'
  Loading link library 'gtech'
Running PRESTO HDLC

Inferred memory devices in process
	in routine diffeq1 line 23 in file
		'../../../designs/diffeq1.v'.
===============================================================================
|    Register Name    |   Type    | Width | Bus | MB | AR | AS | SR | SS | ST |
===============================================================================
|      u_var_reg      | Flip-flop |  32   |  Y  | N  | N  | N  | N  | N  | N  |
|     looping_reg     | Flip-flop |   1   |  N  | N  | N  | N  | N  | N  | N  |
|    Youtport_reg     | Flip-flop |  32   |  Y  | N  | N  | N  | N  | N  | N  |
|      y_var_reg      | Flip-flop |  32   |  Y  | N  | N  | N  | N  | N  | N  |
|    Xoutport_reg     | Flip-flop |  32   |  Y  | N  | N  | N  | N  | N  | N  |
|      x_var_reg      | Flip-flop |  32   |  Y  | N  | N  | N  | N  | N  | N  |
|    Uoutport_reg     | Flip-flop |  32   |  Y  | N  | N  | N  | N  | N  | N  |
===============================================================================
Presto compilation completed successfully.
Elaborated 1 design.
Current design is now 'diffeq1'.
1
# OR
# You can read an elaborated design from the same release.
# Using an elaborated design from an older release will not give the best results.
# read_ddc ${DCRM_ELABORATED_DESIGN_DDC_OUTPUT_FILE}
write -hierarchy -format ddc -output ${RESULTS_DIR}/${DCRM_ELABORATED_DESIGN_DDC_OUTPUT_FILE}
Writing ddc file 'results/diffeq1.elab.ddc'.
1
# YUNSUP
link

  Linking design 'diffeq1'
  Using the following designs and libraries:
  --------------------------------------------------------------------------
  diffeq1                     /work/zhang/users/liu/datuner/scripts/eda_flows/dc/flow/dc-syn/build-dc-2017-08-09_17-38/diffeq1.db
  saed90nm_typ (library)      /work/zhang/users/liu/saed-90nm/cells.db
  dw_foundation.sldb (library) /opt/synopsys/M-2016.12/synopsys-dc-M-2016.12/libraries/syn/dw_foundation.sldb

1
check_design
 
****************************************
check_design summary:
Version:     M-2016.12
Date:        Wed Aug  9 17:39:02 2017
****************************************

                   Name                                            Total
--------------------------------------------------------------------------------
Cells                                                               1
    Cells do not drive (LINT-1)                                     1
--------------------------------------------------------------------------------

Warning: In design 'diffeq1', cell 'C434' does not drive any nets. (LINT-1)
1
# SAIF name mapping
saif_map -create_map -source_instance TOP/v -input rtl-sim.saif
Error: Cannot find the SAIF file (rtl-sim.saif). (PWR-201)
0
# saif_map -rtl_summary -missing_rtl -report
#################################################################################
# Apply Logical Design Constraints
#################################################################################
source -echo -verbose ${DCRM_CONSTRAINTS_INPUT_FILE}
# This constraint sets the target clock period for the chip in
# nanoseconds. Note that the first parameter is the name of the clock
# signal in your verlog design. If you called it something different than
# clk you will need to change this. You should set this constraint
# carefully. If the period is unrealistically small then the tools will
# spend forever trying to meet timing and ultimately fail. If the period
# is too large the tools will have no trouble but you will get a very
# conservative implementation.
create_clock clk -name ideal_clock1 -period ${CLOCK_PERIOD}
1
# This constrainst sets the load capacitance in picofarads of the
# output pins of your design. 4fF is reasonable if your design is
# driving another block of on-chip logic.
set_load -pin_load 0.004 [all_outputs]
1
# This constraint sets the input drive strength of the input pins of
# your design. We specifiy a specific standard cell which models what
# would be driving the inputs. INVX1 is a small inverter and is
# reasonable if another block of on-chip logic is driving your inputs.
set_driving_cell -lib_cell INVX1 [all_inputs]
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
Warning: Design rule attributes from the driving cell will be
	set on the port. (UID-401)
1
# set_input_delay constraints for input ports
set_input_delay -clock ideal_clock1 0 [all_inputs]
1
# set_output_delay constraints for output ports
set_output_delay -clock ideal_clock1 0 [all_outputs]
1
# Prevent synthesis from using known problem cells
set_dont_use [get_lib_cell saed90nm_typ/LNAND*] 
1
set_dont_use [get_lib_cell saed90nm_typ/DFFSSR*]
1
1
# You can enable analysis and optimization for multiple clocks per register.
# To use this, you must constrain to remove false interactions between mutually exclusive
# clocks.  This is needed to prevent unnecessary analysis that can result in
# a significant runtime increase with this feature enabled.
#
# set_clock_groups -physically_exclusive | -logically_exclusive | -asynchronous #                  -group {CLKA, CLKB} -group {CLKC, CLKD}
#
# set_app_var timing_enable_multiple_clocks_per_reg true
#################################################################################
# Apply The Operating Conditions
#################################################################################
# Set operating condition on top level
# set_operating_conditions -max <max_opcond> -min <min_opcond>
#################################################################################
# Create Default Path Groups
#
# Separating these paths can help improve optimization.
# Remove these path group settings if user path groups have already been defined.
#################################################################################
set ports_clock_root [filter_collection [get_attribute [get_clocks] sources] object_class==port]
{clk}
group_path -name REGOUT -to [all_outputs]
1
group_path -name REGIN -from [remove_from_collection [all_inputs] $ports_clock_root]
1
group_path -name FEEDTHROUGH -from [remove_from_collection [all_inputs] $ports_clock_root] -to [all_outputs]
1
#################################################################################
# Power Optimization Section
#################################################################################
#############################################################################
# Clock Gating Setup
#############################################################################
# Default clock_gating_style suits most designs.  Change only if necessary.
# set_clock_gating_style -positive_edge_logic {integrated} -negative_edge_logic {integrated} -control_point before ...
# Clock gate insertion is now performed during compile_ultra -gate_clock
# so insert_clock_gating is no longer recommended at this step.
# The following setting can be used to enable global clock gating.
# With global clock gating, common enables are extracted across hierarchies
# which results in fewer redundant clock gates.
# set compile_clock_gating_through_hierarchy true
# For better timing optimization of enable logic, clock latency for
# clock gating cells can be optionally specified.
# set_clock_gate_latency -clock <clock_name> -stage <stage_num>     #         -fanout_latency {fanout_range1 latency_val1 fanout_range2 latency_val2 ...}
#############################################################################
# Apply Power Optimization Constraints
#############################################################################
# Include a SAIF file, if possible, for power optimization.  If a SAIF file
# is not provided, the default toggle rate of 0.1 will be used for propagating
# switching activity.
# read_saif -auto_map_names -input ${DESIGN_NAME}.saif -instance < DESIGN_INSTANCE > -verbose
# Enable both of the following settings for total power optimization.
# Note: set_max_total_power should no longer be used.
# Use set_max_leakage_power only if you have multiple-Vt libraries.
set_max_leakage_power 0
Information: Command 'set_max_leakage_power' is obsolete and is being ignored. (INFO-102)
0
# set_max_dynamic_power 0
if {[shell_is_in_topographical_mode]} {
      # Use the following command to enable power prediction using clock tree estimation.

      # set_power_prediction true -ct_references <LIB CELL LIST>
    }
if {[shell_is_in_topographical_mode]} {

  ##################################################################################
  # Apply Physical Design Constraints
  #
  # Optional: Floorplan information can be read in here if available.
  # This is highly recommended for irregular floorplans.
  #
  # Floorplan constraints can be provided from one of the following sources:
  # 	* extract_physical_constraints with a DEF file
  #	* read_floorplan with a floorplan file (written by write_floorplan)
  #	* User generated Tcl physical constraints
  #
  ##################################################################################

  # Specify ignored layers for routing to improve correlation
  # Use the same ignored layers that will be used during place and route

  if { ${MIN_ROUTING_LAYER} != ""} {
    set_ignored_layers -min_routing_layer ${MIN_ROUTING_LAYER}
  }
  if { ${MAX_ROUTING_LAYER} != ""} {
    set_ignored_layers -max_routing_layer ${MAX_ROUTING_LAYER}
  }

  report_ignored_layers

  # If the macro names change after mapping and writing out the design due to
  # ungrouping or Verilog change_names renaming, it may be necessary to translate
  # the names to correspond to the cell names that exist before compile.

  # During DEF constraint extraction, extract_physical_constraints automatically
  # matches DEF names back to precompile names in memory using standard matching rules.
  # read_floorplan will also automatically perform this name matching.

  # Modify fuzzy_query_options if other characters are used for hierarchy separators
  # or bus names.

  # set_fuzzy_query_options -hierarchical_separators {/ _ .}   #                         -bus_name_notations {[] __ ()}   #                         -class {cell pin port net}   #                         -show

  ## For DEF floorplan input

  # The DEF file for DCT can be written from ICC using the following recommended options
  # icc_shell> write_def -version 5.7 -rows_tracks_gcells -macro -pins -blockages -specialnets   #                      -vias -region_groups -verbose -output ${DCRM_DCT_DEF_INPUT_FILE}

  if {[file exists [which ${DCRM_DCT_DEF_INPUT_FILE}]]} {
    extract_physical_constraints ${DCRM_DCT_DEF_INPUT_FILE}
  }

  # OR

  ## For floorplan file input

  # The floorplan file for DCT can be written from ICC using the following recommended options
  # Note: ICC requires the use of -placement {terminal} with -create_terminal beginning in the
  #       D-2010.03-SP1 release.
  # icc_shell> write_floorplan -placement {io hard_macro soft_macro terminal} -create_terminal   #                            -row -create_bound -preroute ${DCRM_DCT_FLOORPLAN_INPUT_FILE}

  if {[file exists [which ${DCRM_DCT_FLOORPLAN_INPUT_FILE}]]} {
    read_floorplan ${DCRM_DCT_FLOORPLAN_INPUT_FILE}
  }

  # OR

  ## For Tcl file input

  # For Tcl constraints, the name matching feature must be explicitly enabled
  # and will also use the set_fuzzy_query_options setttings.  This should
  # be turned off after the constraint read in order to minimize runtime.

  if {[file exists [which ${DCRM_DCT_PHYSICAL_CONSTRAINTS_INPUT_FILE}]]} {
    set_app_var fuzzy_matching_enabled true
    source -echo -verbose ${DCRM_DCT_PHYSICAL_CONSTRAINTS_INPUT_FILE}
    set_app_var fuzzy_matching_enabled false
  }


  # Use write_floorplan to save the applied floorplan.
  # Note: write_physical_constraints should no longer be used.
  write_floorplan -all ${RESULTS_DIR}/${DCRM_DCT_FLOORPLAN_OUTPUT_FILE}

  # Verify that all the desired physical constraints have been applied
  # Add the -pre_route option to include pre-routes in the report
  report_physical_constraints > ${REPORTS_DIR}/${DCRM_DCT_PHYSICAL_CONSTRAINTS_REPORT}
}
Information: linking reference library : /work/zhang/users/liu//saed-90nm/cells.fr. (PSYN-878)
Warning: The 'CGLPPSX2' cell in the '/work/zhang/users/liu//saed-90nm/cells.fr' physical library does not 
	have corresponding logical cell description. (PSYN-025)
Warning: The 'CGLPPSX4' cell in the '/work/zhang/users/liu//saed-90nm/cells.fr' physical library does not 
	have corresponding logical cell description. (PSYN-025)

  Linking design 'diffeq1'
  Using the following designs and libraries:
  --------------------------------------------------------------------------
  diffeq1                     /work/zhang/users/liu/datuner/scripts/eda_flows/dc/flow/dc-syn/build-dc-2017-08-09_17-38/diffeq1.db
  saed90nm_typ (library)      /work/zhang/users/liu/saed-90nm/cells.db
  dw_foundation.sldb (library)
                              /opt/synopsys/M-2016.12/synopsys-dc-M-2016.12/libraries/syn/dw_foundation.sldb

Information: No preferred routing direction is found for design layer M1. Automatically deriving direction H. (DCT-035)
Information: No preferred routing direction is found for design layer M2. Automatically deriving direction V. (DCT-035)
Information: No preferred routing direction is found for design layer M3. Automatically deriving direction H. (DCT-035)
Information: No preferred routing direction is found for design layer M4. Automatically deriving direction V. (DCT-035)
Information: No preferred routing direction is found for design layer M5. Automatically deriving direction H. (DCT-035)
Information: No preferred routing direction is found for design layer M6. Automatically deriving direction V. (DCT-035)
Information: No preferred routing direction is found for design layer M7. Automatically deriving direction H. (DCT-035)
Information: No preferred routing direction is found for design layer M8. Automatically deriving direction V. (DCT-035)
Information: No preferred routing direction is found for design layer M9. Automatically deriving direction H. (DCT-035)
No ignored layers specified.
Warning: File 'diffeq1.def' was not found in search path. (CMD-030)
Warning: File 'diffeq1.fp' was not found in search path. (CMD-030)
Warning: File 'diffeq1.physical_constraints.tcl' was not found in search path. (CMD-030)
#################################################################################
# Apply Additional Optimization Constraints
#################################################################################
# Prevent assignment statements in the Verilog netlist.
set_fix_multiple_port_nets -all -buffer_constants
1
#################################################################################
# Save the compile environment snapshot for the Consistency Checker utility.
#
# This utility checks for inconsistent settings between Design Compiler and
# IC Compiler which can contribute to correlation mismatches.
#
# Download this utility from SolvNet.  See the following SolvNet article for
# complete details:
#
# https://solvnet.synopsys.com/retrieve/026366.html
#
# The article is titled: "Using the Consistency Checker to Automatically Compare
# Environment Settings Between Design Compiler and IC Compiler"
#################################################################################
# Uncomment the following line to snapshot the environment for the Consistency Checker
# write_environment -consistency -output ${REPORTS_DIR}/${DCRM_CONSISTENCY_CHECK_ENV_FILE}
#################################################################################
# Compile the Design
#
# Recommended Options:
#
#     -scan
#     -gate_clock
#     -retime
#     -timing_high_effort_script
#     -congestion
#     -spg
#
# Use compile_ultra as your starting point. For test-ready compile, include
# the -scan option with the first compile and any subsequent compiles.
#
# Use -gate_clock to insert clock-gating logic during optimization.  This
# is now the recommended methodology for clock gating.
#
# Use -retime to enable adaptive retiming optimization for further timing
# benefit without any runtime or memory overhead.
#
# The -timing_high_effort_script option can be used to try and improve the
# optimization results at the tradeoff of some additional runtime.
#
# Note: The -area_high_effort_script option is not needed as it is aliased to
#       the default compile_ultra optimization.  The default compile_ultra
#       optimization is tuned to provide good area optimization.
#
# The -congestion option (topographical mode only) enables specialized optimizations that
# reduce routing related congestion during synthesis and scan compression insertion
# with DFT Compiler.  Only enable congestion optimization if required.
# This option requires a license for Design Compiler Graphical.
#
# Use the -spg option to enable Design Compiler Graphical to save physical
# guidance information and pass this information to IC Compiler.
# Physical guidance can improve area and timing correlation with IC Compiler.
# It also improves place_opt runtime in IC Compiler.
# The -spg option is not yet supported with the UPF or hierarchical flows.
# This option requires a license for Design Compiler Graphical.
#
# Note: The -num_cpus option is obsolete and should no longer be
#       used to enable multicore optimization.  It has been replaced by the
#       set_host_options command which can be found in the dc_setup.tcl script.
#
#################################################################################
if {[shell_is_in_topographical_mode]} {
# Use the "-check_only" option of "compile_ultra" to verify that your
# libraries and design are complete and that optimization will not fail
# in topographical mode.  Use the same options as will be used in compile_ultra.

# compile_ultra -gate_clock -check_only
}
compile_ultra DC_OPTIONS
Error: extra positional option 'DC_OPTIONS' (CMD-012)
check_design
 
****************************************
check_design summary:
Version:     M-2016.12
Date:        Wed Aug  9 17:39:04 2017
****************************************

                   Name                                            Total
--------------------------------------------------------------------------------
Cells                                                               1
    Cells do not drive (LINT-1)                                     1
--------------------------------------------------------------------------------

Warning: In design 'diffeq1', cell 'C434' does not drive any nets. (LINT-1)
1
#################################################################################
# Write Out Final Design and Reports
#
#        .ddc:   Recommended binary format used for subsequent Design Compiler sessions
#    Milkyway:   Recommended binary format for IC Compiler
#        .v  :   Verilog netlist for ASCII flow (Formality, PrimeTime, VCS)
#       .spef:   Topographical mode parasitics for PrimeTime
#        .sdf:   SDF backannotated topographical mode timing for PrimeTime
#        .sdc:   SDC constraints for ASCII flow
#
#################################################################################
change_names -rules verilog -hierarchy
Warning: The specified replacement character (_) is conflicting with the specified allowed or restricted character.   (UCN-4)
1
#################################################################################
# Write out Design
#################################################################################
# Write and close SVF file and make it available for immediate use
set_svf -off
1
write -format ddc -hierarchy -output ${RESULTS_DIR}/${DCRM_FINAL_DDC_OUTPUT_FILE}
Writing ddc file 'results/diffeq1.mapped.ddc'.
1
write -f verilog -hierarchy -output ${RESULTS_DIR}/${DCRM_FINAL_VERILOG_OUTPUT_FILE}
Writing verilog file '/work/zhang/users/liu/datuner/scripts/eda_flows/dc/flow/dc-syn/build-dc-2017-08-09_17-38/results/diffeq1.mapped.v'.
Warning: Module diffeq1 contains unmapped components.  The output netlist might not be read back into the system. (VO-12)
1
#################################################################################
# Write out Design Data
#################################################################################
if {[shell_is_in_topographical_mode]} {

  # Note: write_physical_constraints should no longer be used.
  write_floorplan -all ${RESULTS_DIR}/${DCRM_DCT_FINAL_FLOORPLAN_OUTPUT_FILE}

  # Write parasitics data from DCT placement for static timing analysis
  write_parasitics -output ${RESULTS_DIR}/${DCRM_DCT_FINAL_SPEF_OUTPUT_FILE}

  # Write SDF backannotation data from DCT placement for static timing analysis
  write_sdf ${RESULTS_DIR}/${DCRM_DCT_FINAL_SDF_OUTPUT_FILE}

  # Do not write out net RC info into SDC
  set_app_var write_sdc_output_lumped_net_capacitance false
  set_app_var write_sdc_output_net_resistance false
}
Information: Writing parasitics to file '/work/zhang/users/liu/datuner/scripts/eda_flows/dc/flow/dc-syn/build-dc-2017-08-09_17-38/results/diffeq1.mapped.spef'. (WP-3)
Warning: Unable to initialize LIM. Parasitics may have wrong values
Information: Annotated 'cell' delays are assumed to include load delay. (UID-282)
Information: Writing timing information to file '/work/zhang/users/liu/datuner/scripts/eda_flows/dc/flow/dc-syn/build-dc-2017-08-09_17-38/results/diffeq1.mapped.sdf'. (WT-3)
Information: Updating design information... (UID-85)
Warning: Design 'diffeq1' contains 1 high-fanout nets. A fanout number of 1000 will be used for delay calculations involving these nets. (TIM-134)
Warning: Design contains black-box components.  These cells will have no timing information. (WT-7)
false
write_sdc -nosplit ${RESULTS_DIR}/${DCRM_FINAL_SDC_OUTPUT_FILE}
1
# If SAIF is used, write out SAIF name mapping file for PrimeTime-PX
saif_map -type ptpx -write_map ${RESULTS_DIR}/dc-syn.mapped.SAIF.namemap
Information: Writing SAIF name mapping information into the PT-PX name mapping file 'results/dc-syn.mapped.SAIF.namemap'. (PWR-636)
1
#################################################################################
# Generate Final Reports
#################################################################################
#YUNSUP: elaborate
report_qor > ${REPORTS_DIR}/${DCRM_FINAL_QOR_REPORT}
report_timing -input_pins -capacitance -transition_time -nets -significant_digits 4 -nosplit -nworst 10 -max_paths 500 > ${REPORTS_DIR}/${DESIGN_NAME}.mapped.timing.rpt
if {[shell_is_in_topographical_mode]} {
  report_area -hierarchy -physical -nosplit > ${REPORTS_DIR}/${DCRM_FINAL_AREA_REPORT}
} else {
  report_area -hierarchy -nosplit > ${REPORTS_DIR}/${DCRM_FINAL_AREA_REPORT}
}
if {[shell_is_in_topographical_mode]} {
  # report_congestion (topographical mode only) reports estimated routing related congestion
  # after topographical mode synthesis.
  # This command requires a license for Design Compiler Graphical.

  report_congestion -nosplit > ${REPORTS_DIR}/${DCRM_DCT_FINAL_CONGESTION_REPORT}

  # Use the following to generate and write out a congestion map from batch mode
  # This requires a GUI session to be temporarily opened and closed so a valid DISPLAY
  # must be set in your UNIX environment.

  # YUNSUP: turn off congestion map
  #if {[info exists env(DISPLAY)]} {
  #  gui_start

  #  # Create a layout window
  #  set MyLayout [gui_create_window -type LayoutWindow]

  #  # Build congestion map in case report_congestion was not previously run
  #  report_congestion -build_map

  #  # Display congestion map in layout window
  #  gui_show_map -map "Global Route Congestion" -show true

  #  # Zoom full to display complete floorplan
  #  gui_zoom -window [gui_get_current_window -view] -full

  #  # Write the congestion map out to an image file
  #  # You can specify the output image type with -format png | xpm | jpg | bmp

  #  # The following saves only the congestion map without the legends
  #  gui_write_window_image -format png -file ${REPORTS_DIR}/${DCRM_DCT_FINAL_CONGESTION_MAP_OUTPUT_FILE}

  #  # The following saves the entire congestion map layout window with the legends
  #  gui_write_window_image -window ${MyLayout} -format png -file ${REPORTS_DIR}/${DCRM_DCT_FINAL_CONGESTION_MAP_WINDOW_OUTPUT_FILE}

  #  gui_stop
  #} else {
  #  puts "Information: The DISPLAY environment variable is not set. Congestion map generation has been skipped."
  #}
}
# Use SAIF file for power analysis
# read_saif -auto_map_names -input ${DESIGN_NAME}.saif -instance < DESIGN_INSTANCE > -verbose
report_power -nosplit -hier > ${REPORTS_DIR}/${DCRM_FINAL_POWER_REPORT}
report_clock_gating -nosplit > ${REPORTS_DIR}/${DCRM_FINAL_CLOCK_GATING_REPORT}
#YUNSUP: elaborate
report_reference -nosplit -hierarchy > ${REPORTS_DIR}/${DESIGN_NAME}.mapped.reference.rpt
report_resources -nosplit -hierarchy > ${REPORTS_DIR}/${DESIGN_NAME}.mapped.resources.rpt
# source find_regs.tcl
# find_regs ${STRIP_PATH}
#################################################################################
# Write out Milkyway Design for Top-Down Flow
#
# This should be the last step in the script
#################################################################################
if {[shell_is_in_topographical_mode]} {
  # write_milkyway uses: mw_logic1_net, mw_logic0_net and mw_design_library variables from dc_setup.tcl
  write_milkyway -overwrite -output ${DCRM_FINAL_MW_CEL_NAME}
}
Error: Cannot write Milkyway for un-mapped design. (MWDC-014)
0
exit

Thank you...
